---
# Source: db-operator/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-operator
  namespace: default
  labels:
    app: db-operator
    app.kubernetes.io/name: db-operator
    app.kubernetes.io/version: "0.1.0"
spec:
  podSelector:
    matchLabels:
      app: db-operator
  policyTypes:
  - Ingress
  - Egress
  egress:

  # Kubernetes apiserver access
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - port: 443
      protocol: TCP
    - port: 6443
      protocol: TCP
  # DNS egress
  - to:
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - port: 53
      protocol: UDP

  ingress:
  # prometheus metrics scraping support
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - port: http
      protocol: TCP
---
# Source: db-operator/templates/rbac.yaml
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: db-operator
  labels:
    app: db-operator
    app.kubernetes.io/name: db-operator
    app.kubernetes.io/version: "0.1.0"
  namespace: default
automountServiceAccountToken: true
---
# Source: db-operator/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: databaseservers.db-operator.widemeadows.de
spec:
  group: db-operator.widemeadows.de
  names:
    categories: []
    kind: DatabaseServer
    plural: databaseservers
    shortNames:
    - dbservers
    singular: databaseserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for DatabaseServerSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Generate the Kubernetes wrapper struct `DatabaseServer` from our Spec and Status struct

              This provides a hook for generating the CRD yaml (in crdgen.rs)
            properties:
              connection:
                description: Database connection details.
                oneOf:
                - required:
                  - url
                - required:
                  - details
                properties:
                  details:
                    properties:
                      dbname:
                        description: The database to connect to for the administrative user; defaults to `postgres`.
                        nullable: true
                        oneOf:
                        - required:
                          - value
                        - required:
                          - secretRef
                        properties:
                          secretRef:
                            properties:
                              key:
                                description: The key of the connection string URL in the secret.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          value:
                            type: string
                        type: object
                      host:
                        description: The host to connect to.
                        oneOf:
                        - required:
                          - value
                        - required:
                          - secretRef
                        properties:
                          secretRef:
                            properties:
                              key:
                                description: The key of the connection string URL in the secret.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          value:
                            type: string
                        type: object
                      password:
                        description: The password of the administrative user.
                        oneOf:
                        - required:
                          - value
                        - required:
                          - secretRef
                        properties:
                          secretRef:
                            properties:
                              key:
                                description: The key of the connection string URL in the secret.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          value:
                            type: string
                        type: object
                      user:
                        description: The username of the administrative user.
                        oneOf:
                        - required:
                          - value
                        - required:
                          - secretRef
                        properties:
                          secretRef:
                            properties:
                              key:
                                description: The key of the connection string URL in the secret.
                                type: string
                              name:
                                description: The name of the secret.
                                type: string
                            required:
                            - key
                            - name
                            type: object
                          value:
                            type: string
                        type: object
                    required:
                    - host
                    - password
                    - user
                    type: object
                  url:
                    description: A literal value.
                    oneOf:
                    - required:
                      - value
                    - required:
                      - secretRef
                    properties:
                      secretRef:
                        properties:
                          key:
                            description: The key of the connection string URL in the secret.
                            type: string
                          name:
                            description: The name of the secret.
                            type: string
                        required:
                        - key
                        - name
                        type: object
                      value:
                        type: string
                    type: object
                type: object
              enable:
                type: boolean
            required:
            - connection
            - enable
            type: object
          status:
            description: The status object of `DatabaseServer`
            nullable: true
            properties:
              connected:
                description: Whether a connection attempt was successful.
                type: boolean
              enabled:
                type: boolean
              server_version:
                description: The server version
                nullable: true
                type: string
            required:
            - connected
            - enabled
            type: object
        required:
        - spec
        title: DatabaseServer
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: db-operator/templates/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: databases.db-operator.widemeadows.de
spec:
  group: db-operator.widemeadows.de
  names:
    categories: []
    kind: Database
    plural: databases
    shortNames:
    - db
    singular: database
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for DatabaseServerSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Generate the Kubernetes wrapper struct `Database` from our Spec and Status struct

              This provides a hook for generating the CRD yaml (in crdgen.rs)
            properties:
              comment:
                description: The optional database comment.
                nullable: true
                type: string
              create:
                default: false
                description: Whether to create the database when reconciling the resource.
                type: boolean
              delete:
                default: false
                description: Whether to delete the database when removing the resource.
                type: boolean
              grants:
                description: User grants to apply.
                items:
                  description: A set of grants.
                  properties:
                    database:
                      description: A set of database-specific grants.
                      nullable: true
                      properties:
                        grants:
                          description: The granted privileges.
                          items:
                            enum:
                            - CONNECT
                            - CREATE
                            - TEMPORARY
                            - ALL PRIVILEGES
                            type: string
                          type: array
                      required:
                      - grants
                      type: object
                    name:
                      description: An optional identifier.
                      nullable: true
                      type: string
                    schema:
                      description: A set of table-specific grants.
                      nullable: true
                      properties:
                        grants:
                          description: The granted privileges.
                          items:
                            enum:
                            - USAGE
                            - CREATE
                            - ALL PRIVILEGES
                            type: string
                          type: array
                        name:
                          type: string
                      required:
                      - grants
                      - name
                      type: object
                    table:
                      description: A set of table-specific grants.
                      nullable: true
                      properties:
                        grants:
                          description: The granted privileges.
                          items:
                            enum:
                            - SELECT
                            - INSERT
                            - UPDATE
                            - DELETE
                            - TRUNCATE
                            - REFERENCES
                            - TRIGGER
                            - ALL PRIVILEGES
                            type: string
                          type: array
                        name:
                          description: The table name.
                          type: string
                        schema:
                          description: The schema name.
                          nullable: true
                          type: string
                      required:
                      - grants
                      - name
                      type: object
                    user:
                      type: string
                  required:
                  - user
                  type: object
                type: array
              name:
                description: The name of the database to create.
                type: string
              readOnly:
                description: Disable all write operations.
                type: boolean
              serverRef:
                description: A reference to the `DatabaseServer` instance to use.
                properties:
                  name:
                    description: The name of the server.
                    type: string
                  namespace:
                    description: The optional namespace of the server.
                    nullable: true
                    type: string
                required:
                - name
                type: object
            required:
            - name
            - readOnly
            - serverRef
            type: object
          status:
            description: The status object of `Database`
            nullable: true
            properties:
              exists:
                type: boolean
            required:
            - exists
            type: object
        required:
        - spec
        title: Database
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
# Source: db-operator/templates/rbac.yaml
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: db-operator
rules:
  # Access to the controller resources.
  - apiGroups: [ "db-operator.widemeadows.de" ]
    resources: [ "databaseservers", "databaseservers/status", "databaseservers/finalizers",
                 "databases", "databases/status", "databases/finalizers" ]
    verbs: [ "get", "list", "watch", "patch", "update" ]
  # Access to the database connection secrets.
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get" ]
  # Creation of controller events.
  - apiGroups: [ "events.k8s.io" ]
    resources: [ "events" ]
    verbs: [ "create" ]
---
# Source: db-operator/templates/rbac.yaml
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: db-operator
subjects:
  - kind: ServiceAccount
    namespace: default
    name: db-operator
roleRef:
  kind: ClusterRole
  name: db-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: db-operator/templates/service.yaml
# Expose the http port of the service
apiVersion: v1
kind: Service
metadata:
  name: db-operator
  namespace: default
  labels:
    app: db-operator
    app.kubernetes.io/name: db-operator
    app.kubernetes.io/version: "0.1.0"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: db-operator
---
# Source: db-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-operator
  namespace: default
  labels:
    app: db-operator
    app.kubernetes.io/name: db-operator
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-operator
  template:
    metadata:
      labels:
        app: db-operator
      annotations:
        kubectl.kubernetes.io/default-container: db-operator
    spec:
      serviceAccountName: db-operator
      securityContext:
        {}
      containers:
        - name: db-operator
          image: sunsided/db-operator:0.1.0
          imagePullPolicy: IfNotPresent
          securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
          resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 100Mi
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: RUST_LOG
              value: info,kube=debug,controller=debug
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
